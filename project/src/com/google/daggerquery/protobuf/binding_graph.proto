/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */

syntax = "proto3";
package dagerquery.models;

import "src/com/google/daggerquery/protobuf/dependency.proto";

option java_package = "com.google.daggerquery.protobuf.autogen";
option java_outer_classname = "BindingGraphProto";

// Model for representing dagger.model.BindingGraph.
message BindingGraph {

  // Created for representing a list with all dependencies as a value for a map.
  message ListWithDependencies {
    repeated Dependency dependency = 1;
  }

  // This data structure represents a directed graph.
  // For example, if there is an edge A --> B,
  // then adjacency_list[A] = [..., B, ...].
  // So the key is a string representation of a node's key
  // and the value is a list with all node's dependencies.
  map<string, ListWithDependencies> adjacency_list = 1;

}
